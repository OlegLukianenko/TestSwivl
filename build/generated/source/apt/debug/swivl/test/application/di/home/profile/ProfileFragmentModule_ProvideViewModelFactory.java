// Generated by Dagger (https://google.github.io/dagger).
package swivl.test.application.di.home.profile;

import android.arch.lifecycle.ViewModelProvider;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import swivl.test.application.app.home.ProfileFragment;
import swivl.test.application.viewmodel.ProfileFragmentViewModel;

public final class ProfileFragmentModule_ProvideViewModelFactory
    implements Factory<ProfileFragmentViewModel> {
  private final ProfileFragmentModule module;

  private final Provider<ProfileFragment> fragmentProvider;

  private final Provider<ViewModelProvider.Factory> factoryProvider;

  public ProfileFragmentModule_ProvideViewModelFactory(
      ProfileFragmentModule module,
      Provider<ProfileFragment> fragmentProvider,
      Provider<ViewModelProvider.Factory> factoryProvider) {
    this.module = module;
    this.fragmentProvider = fragmentProvider;
    this.factoryProvider = factoryProvider;
  }

  @Override
  public ProfileFragmentViewModel get() {
    return provideInstance(module, fragmentProvider, factoryProvider);
  }

  public static ProfileFragmentViewModel provideInstance(
      ProfileFragmentModule module,
      Provider<ProfileFragment> fragmentProvider,
      Provider<ViewModelProvider.Factory> factoryProvider) {
    return proxyProvideViewModel(module, fragmentProvider.get(), factoryProvider.get());
  }

  public static ProfileFragmentModule_ProvideViewModelFactory create(
      ProfileFragmentModule module,
      Provider<ProfileFragment> fragmentProvider,
      Provider<ViewModelProvider.Factory> factoryProvider) {
    return new ProfileFragmentModule_ProvideViewModelFactory(
        module, fragmentProvider, factoryProvider);
  }

  public static ProfileFragmentViewModel proxyProvideViewModel(
      ProfileFragmentModule instance, ProfileFragment fragment, ViewModelProvider.Factory factory) {
    return Preconditions.checkNotNull(
        instance.provideViewModel(fragment, factory),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
