// Generated by Dagger (https://google.github.io/dagger).
package swivl.test.application.di.app;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import okhttp3.OkHttpClient;

public final class DataModule_GetOkHttpClientFactory implements Factory<OkHttpClient> {
  private final DataModule module;

  public DataModule_GetOkHttpClientFactory(DataModule module) {
    this.module = module;
  }

  @Override
  public OkHttpClient get() {
    return provideInstance(module);
  }

  public static OkHttpClient provideInstance(DataModule module) {
    return proxyGetOkHttpClient(module);
  }

  public static DataModule_GetOkHttpClientFactory create(DataModule module) {
    return new DataModule_GetOkHttpClientFactory(module);
  }

  public static OkHttpClient proxyGetOkHttpClient(DataModule instance) {
    return Preconditions.checkNotNull(
        instance.getOkHttpClient(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
