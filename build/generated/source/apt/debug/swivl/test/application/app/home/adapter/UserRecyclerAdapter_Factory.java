// Generated by Dagger (https://google.github.io/dagger).
package swivl.test.application.app.home.adapter;

import dagger.internal.Factory;
import javax.inject.Provider;

public final class UserRecyclerAdapter_Factory implements Factory<UserRecyclerAdapter> {
  private final Provider<UserRecyclerAdapter.UserItemListListener> listenerProvider;

  public UserRecyclerAdapter_Factory(
      Provider<UserRecyclerAdapter.UserItemListListener> listenerProvider) {
    this.listenerProvider = listenerProvider;
  }

  @Override
  public UserRecyclerAdapter get() {
    return provideInstance(listenerProvider);
  }

  public static UserRecyclerAdapter provideInstance(
      Provider<UserRecyclerAdapter.UserItemListListener> listenerProvider) {
    return new UserRecyclerAdapter(listenerProvider.get());
  }

  public static UserRecyclerAdapter_Factory create(
      Provider<UserRecyclerAdapter.UserItemListListener> listenerProvider) {
    return new UserRecyclerAdapter_Factory(listenerProvider);
  }

  public static UserRecyclerAdapter newUserRecyclerAdapter(
      UserRecyclerAdapter.UserItemListListener listener) {
    return new UserRecyclerAdapter(listener);
  }
}
