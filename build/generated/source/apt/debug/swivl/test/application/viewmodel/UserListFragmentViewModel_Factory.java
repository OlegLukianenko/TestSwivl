// Generated by Dagger (https://google.github.io/dagger).
package swivl.test.application.viewmodel;

import dagger.internal.Factory;
import javax.inject.Provider;
import swivl.test.application.data.repository.RepositoryApi;

public final class UserListFragmentViewModel_Factory implements Factory<UserListFragmentViewModel> {
  private final Provider<RepositoryApi> repositoryApiProvider;

  public UserListFragmentViewModel_Factory(Provider<RepositoryApi> repositoryApiProvider) {
    this.repositoryApiProvider = repositoryApiProvider;
  }

  @Override
  public UserListFragmentViewModel get() {
    return provideInstance(repositoryApiProvider);
  }

  public static UserListFragmentViewModel provideInstance(
      Provider<RepositoryApi> repositoryApiProvider) {
    UserListFragmentViewModel instance = new UserListFragmentViewModel();
    UserListFragmentViewModel_MembersInjector.injectRepositoryApi(
        instance, repositoryApiProvider.get());
    return instance;
  }

  public static UserListFragmentViewModel_Factory create(
      Provider<RepositoryApi> repositoryApiProvider) {
    return new UserListFragmentViewModel_Factory(repositoryApiProvider);
  }

  public static UserListFragmentViewModel newUserListFragmentViewModel() {
    return new UserListFragmentViewModel();
  }
}
